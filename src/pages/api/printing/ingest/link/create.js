import clientPromise from '@/lib/mongodb';
import dayjs from '@/lib/time';

import { PrintStates } from '@/util/states';

export default async function handler(req, res) {
    const mongoClient = await clientPromise;

    const body = req.body;

    let input = {
        id: 'assigned_uuid',
        trayName: 'tray_name',
        printer: 'printer_id', // note printer ids can be fetched from GET /api/printing/printers
        estTime: 'PTXHXM', // see https://www.digi.com/resources/documentation/digidocs//90001488-13/reference/r_iso_8601_duration_format.htm, ex. PT2H20M for 2 hours 20 minutes
        materialType: 'material_type', // note material types can be fetched from GET /api/printing/printerTypes
        materialUsage: 0
    };

    if (req.method === 'POST') {
        const data = body.printData;

        let events = [];
        events.push({
            type: PrintStates.QUEUED,
            timestamp: dayjs().utc().toISOString(),
            notes: '[AUTOGENERATED EVENT]'
        });

        const print = await mongoClient
            .db('printing')
            .collection('print-log')
            .insertOne({
                trayName: data.trayName,
                linkedPrintId: data.id,
                printer: data.printer,
                materialType: data.materialType,
                materialUsage: data.materialUsage,
                estTime: data.estTime,

                state: 0,
                notes: '',

                stlFiles: [],

                queuedAt: dayjs().utc().toISOString(),
                updatedAt: dayjs().utc().toISOString(),
                queuedBy: 'AUTOMATED',
                endUser: {
                    firstname: '', // can prob infer this from the trayname
                    lastname: '',
                    email: ''
                },

                events: events
            });

        // add to printer's queue
        const printer = await mongoClient
            .db('printing')
            .collection('printers')
            .findOneAndUpdate(
                { id: data.printer },
                {
                    $push: {
                        queue: print.insertedId.toString()
                    }
                }
            );

        res.status(200).json({
            success: true,
            printId: print.insertedId.toString()
        });
    }
}
